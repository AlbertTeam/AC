//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.WCF.ReactionWay {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetroResult", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearch")]
    [System.SerializableAttribute()]
    public partial class RetroResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WCF.ReactionWay.MoleculeResult[] ResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WCF.ReactionWay.MoleculeResult[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoleculeResult", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearch")]
    [System.SerializableAttribute()]
    public partial class MoleculeResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WCF.ReactionWay.Condition BestConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReactionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetroReactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetroSmilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagPictureIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WCF.ReactionWay.Condition BestCondition {
            get {
                return this.BestConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.BestConditionField, value) != true)) {
                    this.BestConditionField = value;
                    this.RaisePropertyChanged("BestCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReactionCount {
            get {
                return this.ReactionCountField;
            }
            set {
                if ((this.ReactionCountField.Equals(value) != true)) {
                    this.ReactionCountField = value;
                    this.RaisePropertyChanged("ReactionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetroReactionId {
            get {
                return this.RetroReactionIdField;
            }
            set {
                if ((this.RetroReactionIdField.Equals(value) != true)) {
                    this.RetroReactionIdField = value;
                    this.RaisePropertyChanged("RetroReactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetroSmiles {
            get {
                return this.RetroSmilesField;
            }
            set {
                if ((object.ReferenceEquals(this.RetroSmilesField, value) != true)) {
                    this.RetroSmilesField = value;
                    this.RaisePropertyChanged("RetroSmiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagId {
            get {
                return this.TagIdField;
            }
            set {
                if ((this.TagIdField.Equals(value) != true)) {
                    this.TagIdField = value;
                    this.RaisePropertyChanged("TagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagPictureId {
            get {
                return this.TagPictureIdField;
            }
            set {
                if ((this.TagPictureIdField.Equals(value) != true)) {
                    this.TagPictureIdField = value;
                    this.RaisePropertyChanged("TagPictureId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Condition", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearch")]
    [System.SerializableAttribute()]
    public partial class Condition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BestCitationConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BestCitationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BestCitationReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BestCitationYieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CitationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConditionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> FragmentSelectivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinSelectivityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BestCitationCondition {
            get {
                return this.BestCitationConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.BestCitationConditionField, value) != true)) {
                    this.BestCitationConditionField = value;
                    this.RaisePropertyChanged("BestCitationCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BestCitationId {
            get {
                return this.BestCitationIdField;
            }
            set {
                if ((this.BestCitationIdField.Equals(value) != true)) {
                    this.BestCitationIdField = value;
                    this.RaisePropertyChanged("BestCitationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BestCitationReference {
            get {
                return this.BestCitationReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.BestCitationReferenceField, value) != true)) {
                    this.BestCitationReferenceField = value;
                    this.RaisePropertyChanged("BestCitationReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BestCitationYield {
            get {
                return this.BestCitationYieldField;
            }
            set {
                if ((this.BestCitationYieldField.Equals(value) != true)) {
                    this.BestCitationYieldField = value;
                    this.RaisePropertyChanged("BestCitationYield");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CitationCount {
            get {
                return this.CitationCountField;
            }
            set {
                if ((this.CitationCountField.Equals(value) != true)) {
                    this.CitationCountField = value;
                    this.RaisePropertyChanged("CitationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConditionId {
            get {
                return this.ConditionIdField;
            }
            set {
                if ((this.ConditionIdField.Equals(value) != true)) {
                    this.ConditionIdField = value;
                    this.RaisePropertyChanged("ConditionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> FragmentSelectivity {
            get {
                return this.FragmentSelectivityField;
            }
            set {
                if ((object.ReferenceEquals(this.FragmentSelectivityField, value) != true)) {
                    this.FragmentSelectivityField = value;
                    this.RaisePropertyChanged("FragmentSelectivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinSelectivity {
            get {
                return this.MinSelectivityField;
            }
            set {
                if ((this.MinSelectivityField.Equals(value) != true)) {
                    this.MinSelectivityField = value;
                    this.RaisePropertyChanged("MinSelectivity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CitationResult", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearch")]
    [System.SerializableAttribute()]
    public partial class CitationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WCF.ReactionWay.Citation[] CitationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WCF.ReactionWay.Citation[] Citations {
            get {
                return this.CitationsField;
            }
            set {
                if ((object.ReferenceEquals(this.CitationsField, value) != true)) {
                    this.CitationsField = value;
                    this.RaisePropertyChanged("Citations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Citation", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearch")]
    [System.SerializableAttribute()]
    public partial class Citation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CitationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CitationId {
            get {
                return this.CitationIdField;
            }
            set {
                if ((this.CitationIdField.Equals(value) != true)) {
                    this.CitationIdField = value;
                    this.RaisePropertyChanged("CitationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Yield {
            get {
                return this.YieldField;
            }
            set {
                if ((this.YieldField.Equals(value) != true)) {
                    this.YieldField = value;
                    this.RaisePropertyChanged("Yield");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConditionResult", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearch")]
    [System.SerializableAttribute()]
    public partial class ConditionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WCF.ReactionWay.Condition[] ConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetroReactionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WCF.ReactionWay.Condition[] Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetroReactionId {
            get {
                return this.RetroReactionIdField;
            }
            set {
                if ((this.RetroReactionIdField.Equals(value) != true)) {
                    this.RetroReactionIdField = value;
                    this.RaisePropertyChanged("RetroReactionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnList", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearchEntity")]
    [System.SerializableAttribute()]
    public partial class ReturnList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CanMakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductSmilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetroReactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StepsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int citationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int isMoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string procedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int reactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.WCF.ReactionWay.Reaction[] reactionObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string referenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rxnsmilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float yieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CanMake {
            get {
                return this.CanMakeField;
            }
            set {
                if ((this.CanMakeField.Equals(value) != true)) {
                    this.CanMakeField = value;
                    this.RaisePropertyChanged("CanMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductSmiles {
            get {
                return this.ProductSmilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSmilesField, value) != true)) {
                    this.ProductSmilesField = value;
                    this.RaisePropertyChanged("ProductSmiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetroReactionID {
            get {
                return this.RetroReactionIDField;
            }
            set {
                if ((this.RetroReactionIDField.Equals(value) != true)) {
                    this.RetroReactionIDField = value;
                    this.RaisePropertyChanged("RetroReactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((this.StepsField.Equals(value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int citationID {
            get {
                return this.citationIDField;
            }
            set {
                if ((this.citationIDField.Equals(value) != true)) {
                    this.citationIDField = value;
                    this.RaisePropertyChanged("citationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int isMore {
            get {
                return this.isMoreField;
            }
            set {
                if ((this.isMoreField.Equals(value) != true)) {
                    this.isMoreField = value;
                    this.RaisePropertyChanged("isMore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string procedure {
            get {
                return this.procedureField;
            }
            set {
                if ((object.ReferenceEquals(this.procedureField, value) != true)) {
                    this.procedureField = value;
                    this.RaisePropertyChanged("procedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int reactionID {
            get {
                return this.reactionIDField;
            }
            set {
                if ((this.reactionIDField.Equals(value) != true)) {
                    this.reactionIDField = value;
                    this.RaisePropertyChanged("reactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.WCF.ReactionWay.Reaction[] reactionObject {
            get {
                return this.reactionObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.reactionObjectField, value) != true)) {
                    this.reactionObjectField = value;
                    this.RaisePropertyChanged("reactionObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string reference {
            get {
                return this.referenceField;
            }
            set {
                if ((object.ReferenceEquals(this.referenceField, value) != true)) {
                    this.referenceField = value;
                    this.RaisePropertyChanged("reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rxnsmiles {
            get {
                return this.rxnsmilesField;
            }
            set {
                if ((object.ReferenceEquals(this.rxnsmilesField, value) != true)) {
                    this.rxnsmilesField = value;
                    this.RaisePropertyChanged("rxnsmiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float yield {
            get {
                return this.yieldField;
            }
            set {
                if ((this.yieldField.Equals(value) != true)) {
                    this.yieldField = value;
                    this.RaisePropertyChanged("yield");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reaction", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearchEntity")]
    [System.SerializableAttribute()]
    public partial class Reaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MoleculeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string casField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int hasPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double molMassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string smilesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MoleculeID {
            get {
                return this.MoleculeIDField;
            }
            set {
                if ((this.MoleculeIDField.Equals(value) != true)) {
                    this.MoleculeIDField = value;
                    this.RaisePropertyChanged("MoleculeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cas {
            get {
                return this.casField;
            }
            set {
                if ((object.ReferenceEquals(this.casField, value) != true)) {
                    this.casField = value;
                    this.RaisePropertyChanged("cas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int hasPrice {
            get {
                return this.hasPriceField;
            }
            set {
                if ((this.hasPriceField.Equals(value) != true)) {
                    this.hasPriceField = value;
                    this.RaisePropertyChanged("hasPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double molMass {
            get {
                return this.molMassField;
            }
            set {
                if ((this.molMassField.Equals(value) != true)) {
                    this.molMassField = value;
                    this.RaisePropertyChanged("molMass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string smiles {
            get {
                return this.smilesField;
            }
            set {
                if ((object.ReferenceEquals(this.smilesField, value) != true)) {
                    this.smilesField = value;
                    this.RaisePropertyChanged("smiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriceEntity", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearchEntity")]
    [System.SerializableAttribute()]
    public partial class PriceEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string casField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal packageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal weightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cas {
            get {
                return this.casField;
            }
            set {
                if ((object.ReferenceEquals(this.casField, value) != true)) {
                    this.casField = value;
                    this.RaisePropertyChanged("cas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal package {
            get {
                return this.packageField;
            }
            set {
                if ((this.packageField.Equals(value) != true)) {
                    this.packageField = value;
                    this.RaisePropertyChanged("package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal weight {
            get {
                return this.weightField;
            }
            set {
                if ((this.weightField.Equals(value) != true)) {
                    this.weightField = value;
                    this.RaisePropertyChanged("weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemNode", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearchEntity.CalculatePrices")]
    [System.SerializableAttribute()]
    public partial class ItemNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CASk__BackingFieldField;
        
        private string Namek__BackingFieldField;
        
        private decimal NeedMoneyk__BackingFieldField;
        
        private int NodeIDk__BackingFieldField;
        
        private int PIDk__BackingFieldField;
        
        private string Smilesk__BackingFieldField;
        
        private double Weightk__BackingFieldField;
        
        private double Yieldk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CAS>k__BackingField", IsRequired=true)]
        public string CASk__BackingField {
            get {
                return this.CASk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CASk__BackingFieldField, value) != true)) {
                    this.CASk__BackingFieldField = value;
                    this.RaisePropertyChanged("CASk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Name>k__BackingField", IsRequired=true)]
        public string Namek__BackingField {
            get {
                return this.Namek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Namek__BackingFieldField, value) != true)) {
                    this.Namek__BackingFieldField = value;
                    this.RaisePropertyChanged("Namek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NeedMoney>k__BackingField", IsRequired=true)]
        public decimal NeedMoneyk__BackingField {
            get {
                return this.NeedMoneyk__BackingFieldField;
            }
            set {
                if ((this.NeedMoneyk__BackingFieldField.Equals(value) != true)) {
                    this.NeedMoneyk__BackingFieldField = value;
                    this.RaisePropertyChanged("NeedMoneyk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NodeID>k__BackingField", IsRequired=true)]
        public int NodeIDk__BackingField {
            get {
                return this.NodeIDk__BackingFieldField;
            }
            set {
                if ((this.NodeIDk__BackingFieldField.Equals(value) != true)) {
                    this.NodeIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("NodeIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PID>k__BackingField", IsRequired=true)]
        public int PIDk__BackingField {
            get {
                return this.PIDk__BackingFieldField;
            }
            set {
                if ((this.PIDk__BackingFieldField.Equals(value) != true)) {
                    this.PIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("PIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Smiles>k__BackingField", IsRequired=true)]
        public string Smilesk__BackingField {
            get {
                return this.Smilesk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Smilesk__BackingFieldField, value) != true)) {
                    this.Smilesk__BackingFieldField = value;
                    this.RaisePropertyChanged("Smilesk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Weight>k__BackingField", IsRequired=true)]
        public double Weightk__BackingField {
            get {
                return this.Weightk__BackingFieldField;
            }
            set {
                if ((this.Weightk__BackingFieldField.Equals(value) != true)) {
                    this.Weightk__BackingFieldField = value;
                    this.RaisePropertyChanged("Weightk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Yield>k__BackingField", IsRequired=true)]
        public double Yieldk__BackingField {
            get {
                return this.Yieldk__BackingFieldField;
            }
            set {
                if ((this.Yieldk__BackingFieldField.Equals(value) != true)) {
                    this.Yieldk__BackingFieldField = value;
                    this.RaisePropertyChanged("Yieldk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CASAndPrice", Namespace="http://schemas.datacontract.org/2004/07/JChemBaseSearchEntity")]
    [System.SerializableAttribute()]
    public partial class CASAndPrice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string casField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int hasPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double molMassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cas {
            get {
                return this.casField;
            }
            set {
                if ((object.ReferenceEquals(this.casField, value) != true)) {
                    this.casField = value;
                    this.RaisePropertyChanged("cas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int hasPrice {
            get {
                return this.hasPriceField;
            }
            set {
                if ((this.hasPriceField.Equals(value) != true)) {
                    this.hasPriceField = value;
                    this.RaisePropertyChanged("hasPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double molMass {
            get {
                return this.molMassField;
            }
            set {
                if ((this.molMassField.Equals(value) != true)) {
                    this.molMassField = value;
                    this.RaisePropertyChanged("molMass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF.ReactionWay.ISearchService")]
    public interface ISearchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetMoleculeList", ReplyAction="http://tempuri.org/ISearchService/GetMoleculeListResponse")]
        Web.WCF.ReactionWay.RetroResult GetMoleculeList(string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetMoleculeList", ReplyAction="http://tempuri.org/ISearchService/GetMoleculeListResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.RetroResult> GetMoleculeListAsync(string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetMol", ReplyAction="http://tempuri.org/ISearchService/GetMolResponse")]
        string GetMol(string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetMol", ReplyAction="http://tempuri.org/ISearchService/GetMolResponse")]
        System.Threading.Tasks.Task<string> GetMolAsync(string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSmiles", ReplyAction="http://tempuri.org/ISearchService/GetSmilesResponse")]
        string GetSmiles(string MolString, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSmiles", ReplyAction="http://tempuri.org/ISearchService/GetSmilesResponse")]
        System.Threading.Tasks.Task<string> GetSmilesAsync(string MolString, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetCitatioinList", ReplyAction="http://tempuri.org/ISearchService/GetCitatioinListResponse")]
        Web.WCF.ReactionWay.CitationResult GetCitatioinList(int ConditionId, int RetroReactionId, string querySmiles, string retroSmiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetCitatioinList", ReplyAction="http://tempuri.org/ISearchService/GetCitatioinListResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.CitationResult> GetCitatioinListAsync(int ConditionId, int RetroReactionId, string querySmiles, string retroSmiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetConditionList", ReplyAction="http://tempuri.org/ISearchService/GetConditionListResponse")]
        Web.WCF.ReactionWay.ConditionResult GetConditionList(string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetConditionList", ReplyAction="http://tempuri.org/ISearchService/GetConditionListResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ConditionResult> GetConditionListAsync(string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetMoleculeConditionList", ReplyAction="http://tempuri.org/ISearchService/GetMoleculeConditionListResponse")]
        Web.WCF.ReactionWay.ConditionResult GetMoleculeConditionList(string Smiles, int RetroReactionId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetMoleculeConditionList", ReplyAction="http://tempuri.org/ISearchService/GetMoleculeConditionListResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ConditionResult> GetMoleculeConditionListAsync(string Smiles, int RetroReactionId, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetPicture", ReplyAction="http://tempuri.org/ISearchService/GetPictureResponse")]
        System.IO.Stream GetPicture(string smiles, string width, string height, string outputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetPicture", ReplyAction="http://tempuri.org/ISearchService/GetPictureResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetPictureAsync(string smiles, string width, string height, string outputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetCitationPicture", ReplyAction="http://tempuri.org/ISearchService/GetCitationPictureResponse")]
        System.IO.Stream GetCitationPicture(string citationId, string width, string height, string outputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetCitationPicture", ReplyAction="http://tempuri.org/ISearchService/GetCitationPictureResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetCitationPictureAsync(string citationId, string width, string height, string outputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetTagPicture", ReplyAction="http://tempuri.org/ISearchService/GetTagPictureResponse")]
        System.IO.Stream GetTagPicture(string tagPictureId, string productSmiles, string width, string height, string outputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetTagPicture", ReplyAction="http://tempuri.org/ISearchService/GetTagPictureResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetTagPictureAsync(string tagPictureId, string productSmiles, string width, string height, string outputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetRxnFromProduct", ReplyAction="http://tempuri.org/ISearchService/GetRxnFromProductResponse")]
        Web.WCF.ReactionWay.ReturnList[] GetRxnFromProduct(int UserID, string Smiles, string Password, int IsRoot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetRxnFromProduct", ReplyAction="http://tempuri.org/ISearchService/GetRxnFromProductResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetRxnFromProductAsync(int UserID, string Smiles, string Password, int IsRoot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSubStrctureProduct", ReplyAction="http://tempuri.org/ISearchService/GetSubStrctureProductResponse")]
        Web.WCF.ReactionWay.ReturnList[] GetSubStrctureProduct(int UserID, string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSubStrctureProduct", ReplyAction="http://tempuri.org/ISearchService/GetSubStrctureProductResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetSubStrctureProductAsync(int UserID, string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetRxnByReactionID", ReplyAction="http://tempuri.org/ISearchService/GetRxnByReactionIDResponse")]
        Web.WCF.ReactionWay.ReturnList[] GetRxnByReactionID(int UserID, int ReactionID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetRxnByReactionID", ReplyAction="http://tempuri.org/ISearchService/GetRxnByReactionIDResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetRxnByReactionIDAsync(int UserID, int ReactionID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetReactionByConditon", ReplyAction="http://tempuri.org/ISearchService/GetReactionByConditonResponse")]
        Web.WCF.ReactionWay.ReturnList[] GetReactionByConditon(int UserID, string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetReactionByConditon", ReplyAction="http://tempuri.org/ISearchService/GetReactionByConditonResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetReactionByConditonAsync(int UserID, string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetReactionLike", ReplyAction="http://tempuri.org/ISearchService/GetReactionLikeResponse")]
        Web.WCF.ReactionWay.ReturnList[] GetReactionLike(int UserID, string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetReactionLike", ReplyAction="http://tempuri.org/ISearchService/GetReactionLikeResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetReactionLikeAsync(int UserID, string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetProductLike", ReplyAction="http://tempuri.org/ISearchService/GetProductLikeResponse")]
        Web.WCF.ReactionWay.ReturnList[] GetProductLike(int UserID, string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetProductLike", ReplyAction="http://tempuri.org/ISearchService/GetProductLikeResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetProductLikeAsync(int UserID, string Smiles, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetRetroReaction", ReplyAction="http://tempuri.org/ISearchService/GetRetroReactionResponse")]
        Web.WCF.ReactionWay.ReturnList[] GetRetroReaction(int UserID, string Smiles, int RetroReactionID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetRetroReaction", ReplyAction="http://tempuri.org/ISearchService/GetRetroReactionResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetRetroReactionAsync(int UserID, string Smiles, int RetroReactionID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSmilesByCAS", ReplyAction="http://tempuri.org/ISearchService/GetSmilesByCASResponse")]
        string GetSmilesByCAS(string cas, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSmilesByCAS", ReplyAction="http://tempuri.org/ISearchService/GetSmilesByCASResponse")]
        System.Threading.Tasks.Task<string> GetSmilesByCASAsync(string cas, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetItemPrice", ReplyAction="http://tempuri.org/ISearchService/GetItemPriceResponse")]
        Web.WCF.ReactionWay.PriceEntity GetItemPrice(string PSmiles, string RSmiles, double Yield, double PWeight, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetItemPrice", ReplyAction="http://tempuri.org/ISearchService/GetItemPriceResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.PriceEntity> GetItemPriceAsync(string PSmiles, string RSmiles, double Yield, double PWeight, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/ListPriceCount", ReplyAction="http://tempuri.org/ISearchService/ListPriceCountResponse")]
        Web.WCF.ReactionWay.ItemNode[] ListPriceCount(string ItemNode, int userID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/ListPriceCount", ReplyAction="http://tempuri.org/ISearchService/ListPriceCountResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ItemNode[]> ListPriceCountAsync(string ItemNode, int userID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetPriceHistory", ReplyAction="http://tempuri.org/ISearchService/GetPriceHistoryResponse")]
        Web.WCF.ReactionWay.CASAndPrice GetPriceHistory(string Smiles, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetPriceHistory", ReplyAction="http://tempuri.org/ISearchService/GetPriceHistoryResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.CASAndPrice> GetPriceHistoryAsync(string Smiles, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetMolByCasOrName", ReplyAction="http://tempuri.org/ISearchService/GetMolByCasOrNameResponse")]
        string GetMolByCasOrName(string Condition, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetMolByCasOrName", ReplyAction="http://tempuri.org/ISearchService/GetMolByCasOrNameResponse")]
        System.Threading.Tasks.Task<string> GetMolByCasOrNameAsync(string Condition, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSmilesByCasOrName", ReplyAction="http://tempuri.org/ISearchService/GetSmilesByCasOrNameResponse")]
        string GetSmilesByCasOrName(string Condition, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSmilesByCasOrName", ReplyAction="http://tempuri.org/ISearchService/GetSmilesByCasOrNameResponse")]
        System.Threading.Tasks.Task<string> GetSmilesByCasOrNameAsync(string Condition, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetReactionWayPic", ReplyAction="http://tempuri.org/ISearchService/GetReactionWayPicResponse")]
        System.IO.Stream GetReactionWayPic(string Node, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetReactionWayPic", ReplyAction="http://tempuri.org/ISearchService/GetReactionWayPicResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetReactionWayPicAsync(string Node, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/SaveReactionWay", ReplyAction="http://tempuri.org/ISearchService/SaveReactionWayResponse")]
        byte[] SaveReactionWay(string Node, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/SaveReactionWay", ReplyAction="http://tempuri.org/ISearchService/SaveReactionWayResponse")]
        System.Threading.Tasks.Task<byte[]> SaveReactionWayAsync(string Node, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/ExportWord", ReplyAction="http://tempuri.org/ISearchService/ExportWordResponse")]
        byte[] ExportWord(string Node, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/ExportWord", ReplyAction="http://tempuri.org/ISearchService/ExportWordResponse")]
        System.Threading.Tasks.Task<byte[]> ExportWordAsync(string Node, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetCitationByID", ReplyAction="http://tempuri.org/ISearchService/GetCitationByIDResponse")]
        string GetCitationByID(int CitationID, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetCitationByID", ReplyAction="http://tempuri.org/ISearchService/GetCitationByIDResponse")]
        System.Threading.Tasks.Task<string> GetCitationByIDAsync(int CitationID, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetReactionByReactant", ReplyAction="http://tempuri.org/ISearchService/GetReactionByReactantResponse")]
        Web.WCF.ReactionWay.ReturnList[] GetReactionByReactant(string Smiles, int UserID, string PassWord, int IsRoot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetReactionByReactant", ReplyAction="http://tempuri.org/ISearchService/GetReactionByReactantResponse")]
        System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetReactionByReactantAsync(string Smiles, int UserID, string PassWord, int IsRoot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetCD_ID", ReplyAction="http://tempuri.org/ISearchService/GetCD_IDResponse")]
        int[] GetCD_ID(string smiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetCD_ID", ReplyAction="http://tempuri.org/ISearchService/GetCD_IDResponse")]
        System.Threading.Tasks.Task<int[]> GetCD_IDAsync(string smiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetJchemQueryID", ReplyAction="http://tempuri.org/ISearchService/GetJchemQueryIDResponse")]
        int[] GetJchemQueryID(string smiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetJchemQueryID", ReplyAction="http://tempuri.org/ISearchService/GetJchemQueryIDResponse")]
        System.Threading.Tasks.Task<int[]> GetJchemQueryIDAsync(string smiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSmilesFromCASByChemaxon", ReplyAction="http://tempuri.org/ISearchService/GetSmilesFromCASByChemaxonResponse")]
        string GetSmilesFromCASByChemaxon(string cas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/GetSmilesFromCASByChemaxon", ReplyAction="http://tempuri.org/ISearchService/GetSmilesFromCASByChemaxonResponse")]
        System.Threading.Tasks.Task<string> GetSmilesFromCASByChemaxonAsync(string cas);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISearchServiceChannel : Web.WCF.ReactionWay.ISearchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchServiceClient : System.ServiceModel.ClientBase<Web.WCF.ReactionWay.ISearchService>, Web.WCF.ReactionWay.ISearchService {
        
        public SearchServiceClient() {
        }
        
        public SearchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SearchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Web.WCF.ReactionWay.RetroResult GetMoleculeList(string Smiles, string Password) {
            return base.Channel.GetMoleculeList(Smiles, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.RetroResult> GetMoleculeListAsync(string Smiles, string Password) {
            return base.Channel.GetMoleculeListAsync(Smiles, Password);
        }
        
        public string GetMol(string Smiles, string Password) {
            return base.Channel.GetMol(Smiles, Password);
        }
        
        public System.Threading.Tasks.Task<string> GetMolAsync(string Smiles, string Password) {
            return base.Channel.GetMolAsync(Smiles, Password);
        }
        
        public string GetSmiles(string MolString, string Password) {
            return base.Channel.GetSmiles(MolString, Password);
        }
        
        public System.Threading.Tasks.Task<string> GetSmilesAsync(string MolString, string Password) {
            return base.Channel.GetSmilesAsync(MolString, Password);
        }
        
        public Web.WCF.ReactionWay.CitationResult GetCitatioinList(int ConditionId, int RetroReactionId, string querySmiles, string retroSmiles, string Password) {
            return base.Channel.GetCitatioinList(ConditionId, RetroReactionId, querySmiles, retroSmiles, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.CitationResult> GetCitatioinListAsync(int ConditionId, int RetroReactionId, string querySmiles, string retroSmiles, string Password) {
            return base.Channel.GetCitatioinListAsync(ConditionId, RetroReactionId, querySmiles, retroSmiles, Password);
        }
        
        public Web.WCF.ReactionWay.ConditionResult GetConditionList(string Smiles, string Password) {
            return base.Channel.GetConditionList(Smiles, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ConditionResult> GetConditionListAsync(string Smiles, string Password) {
            return base.Channel.GetConditionListAsync(Smiles, Password);
        }
        
        public Web.WCF.ReactionWay.ConditionResult GetMoleculeConditionList(string Smiles, int RetroReactionId, string Password) {
            return base.Channel.GetMoleculeConditionList(Smiles, RetroReactionId, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ConditionResult> GetMoleculeConditionListAsync(string Smiles, int RetroReactionId, string Password) {
            return base.Channel.GetMoleculeConditionListAsync(Smiles, RetroReactionId, Password);
        }
        
        public System.IO.Stream GetPicture(string smiles, string width, string height, string outputFormat) {
            return base.Channel.GetPicture(smiles, width, height, outputFormat);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetPictureAsync(string smiles, string width, string height, string outputFormat) {
            return base.Channel.GetPictureAsync(smiles, width, height, outputFormat);
        }
        
        public System.IO.Stream GetCitationPicture(string citationId, string width, string height, string outputFormat) {
            return base.Channel.GetCitationPicture(citationId, width, height, outputFormat);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetCitationPictureAsync(string citationId, string width, string height, string outputFormat) {
            return base.Channel.GetCitationPictureAsync(citationId, width, height, outputFormat);
        }
        
        public System.IO.Stream GetTagPicture(string tagPictureId, string productSmiles, string width, string height, string outputFormat) {
            return base.Channel.GetTagPicture(tagPictureId, productSmiles, width, height, outputFormat);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetTagPictureAsync(string tagPictureId, string productSmiles, string width, string height, string outputFormat) {
            return base.Channel.GetTagPictureAsync(tagPictureId, productSmiles, width, height, outputFormat);
        }
        
        public Web.WCF.ReactionWay.ReturnList[] GetRxnFromProduct(int UserID, string Smiles, string Password, int IsRoot) {
            return base.Channel.GetRxnFromProduct(UserID, Smiles, Password, IsRoot);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetRxnFromProductAsync(int UserID, string Smiles, string Password, int IsRoot) {
            return base.Channel.GetRxnFromProductAsync(UserID, Smiles, Password, IsRoot);
        }
        
        public Web.WCF.ReactionWay.ReturnList[] GetSubStrctureProduct(int UserID, string Smiles, string Password) {
            return base.Channel.GetSubStrctureProduct(UserID, Smiles, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetSubStrctureProductAsync(int UserID, string Smiles, string Password) {
            return base.Channel.GetSubStrctureProductAsync(UserID, Smiles, Password);
        }
        
        public Web.WCF.ReactionWay.ReturnList[] GetRxnByReactionID(int UserID, int ReactionID, string Password) {
            return base.Channel.GetRxnByReactionID(UserID, ReactionID, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetRxnByReactionIDAsync(int UserID, int ReactionID, string Password) {
            return base.Channel.GetRxnByReactionIDAsync(UserID, ReactionID, Password);
        }
        
        public Web.WCF.ReactionWay.ReturnList[] GetReactionByConditon(int UserID, string Smiles, string Password) {
            return base.Channel.GetReactionByConditon(UserID, Smiles, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetReactionByConditonAsync(int UserID, string Smiles, string Password) {
            return base.Channel.GetReactionByConditonAsync(UserID, Smiles, Password);
        }
        
        public Web.WCF.ReactionWay.ReturnList[] GetReactionLike(int UserID, string Smiles, string Password) {
            return base.Channel.GetReactionLike(UserID, Smiles, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetReactionLikeAsync(int UserID, string Smiles, string Password) {
            return base.Channel.GetReactionLikeAsync(UserID, Smiles, Password);
        }
        
        public Web.WCF.ReactionWay.ReturnList[] GetProductLike(int UserID, string Smiles, string Password) {
            return base.Channel.GetProductLike(UserID, Smiles, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetProductLikeAsync(int UserID, string Smiles, string Password) {
            return base.Channel.GetProductLikeAsync(UserID, Smiles, Password);
        }
        
        public Web.WCF.ReactionWay.ReturnList[] GetRetroReaction(int UserID, string Smiles, int RetroReactionID, string Password) {
            return base.Channel.GetRetroReaction(UserID, Smiles, RetroReactionID, Password);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetRetroReactionAsync(int UserID, string Smiles, int RetroReactionID, string Password) {
            return base.Channel.GetRetroReactionAsync(UserID, Smiles, RetroReactionID, Password);
        }
        
        public string GetSmilesByCAS(string cas, string Password) {
            return base.Channel.GetSmilesByCAS(cas, Password);
        }
        
        public System.Threading.Tasks.Task<string> GetSmilesByCASAsync(string cas, string Password) {
            return base.Channel.GetSmilesByCASAsync(cas, Password);
        }
        
        public Web.WCF.ReactionWay.PriceEntity GetItemPrice(string PSmiles, string RSmiles, double Yield, double PWeight, string PassWord) {
            return base.Channel.GetItemPrice(PSmiles, RSmiles, Yield, PWeight, PassWord);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.PriceEntity> GetItemPriceAsync(string PSmiles, string RSmiles, double Yield, double PWeight, string PassWord) {
            return base.Channel.GetItemPriceAsync(PSmiles, RSmiles, Yield, PWeight, PassWord);
        }
        
        public Web.WCF.ReactionWay.ItemNode[] ListPriceCount(string ItemNode, int userID, string PassWord) {
            return base.Channel.ListPriceCount(ItemNode, userID, PassWord);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ItemNode[]> ListPriceCountAsync(string ItemNode, int userID, string PassWord) {
            return base.Channel.ListPriceCountAsync(ItemNode, userID, PassWord);
        }
        
        public Web.WCF.ReactionWay.CASAndPrice GetPriceHistory(string Smiles, string PassWord) {
            return base.Channel.GetPriceHistory(Smiles, PassWord);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.CASAndPrice> GetPriceHistoryAsync(string Smiles, string PassWord) {
            return base.Channel.GetPriceHistoryAsync(Smiles, PassWord);
        }
        
        public string GetMolByCasOrName(string Condition, string PassWord) {
            return base.Channel.GetMolByCasOrName(Condition, PassWord);
        }
        
        public System.Threading.Tasks.Task<string> GetMolByCasOrNameAsync(string Condition, string PassWord) {
            return base.Channel.GetMolByCasOrNameAsync(Condition, PassWord);
        }
        
        public string GetSmilesByCasOrName(string Condition, string PassWord) {
            return base.Channel.GetSmilesByCasOrName(Condition, PassWord);
        }
        
        public System.Threading.Tasks.Task<string> GetSmilesByCasOrNameAsync(string Condition, string PassWord) {
            return base.Channel.GetSmilesByCasOrNameAsync(Condition, PassWord);
        }
        
        public System.IO.Stream GetReactionWayPic(string Node, int UserID, string PassWord) {
            return base.Channel.GetReactionWayPic(Node, UserID, PassWord);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetReactionWayPicAsync(string Node, int UserID, string PassWord) {
            return base.Channel.GetReactionWayPicAsync(Node, UserID, PassWord);
        }
        
        public byte[] SaveReactionWay(string Node, int UserID, string PassWord) {
            return base.Channel.SaveReactionWay(Node, UserID, PassWord);
        }
        
        public System.Threading.Tasks.Task<byte[]> SaveReactionWayAsync(string Node, int UserID, string PassWord) {
            return base.Channel.SaveReactionWayAsync(Node, UserID, PassWord);
        }
        
        public byte[] ExportWord(string Node, int UserID, string PassWord) {
            return base.Channel.ExportWord(Node, UserID, PassWord);
        }
        
        public System.Threading.Tasks.Task<byte[]> ExportWordAsync(string Node, int UserID, string PassWord) {
            return base.Channel.ExportWordAsync(Node, UserID, PassWord);
        }
        
        public string GetCitationByID(int CitationID, int UserID, string PassWord) {
            return base.Channel.GetCitationByID(CitationID, UserID, PassWord);
        }
        
        public System.Threading.Tasks.Task<string> GetCitationByIDAsync(int CitationID, int UserID, string PassWord) {
            return base.Channel.GetCitationByIDAsync(CitationID, UserID, PassWord);
        }
        
        public Web.WCF.ReactionWay.ReturnList[] GetReactionByReactant(string Smiles, int UserID, string PassWord, int IsRoot) {
            return base.Channel.GetReactionByReactant(Smiles, UserID, PassWord, IsRoot);
        }
        
        public System.Threading.Tasks.Task<Web.WCF.ReactionWay.ReturnList[]> GetReactionByReactantAsync(string Smiles, int UserID, string PassWord, int IsRoot) {
            return base.Channel.GetReactionByReactantAsync(Smiles, UserID, PassWord, IsRoot);
        }
        
        public int[] GetCD_ID(string smiles) {
            return base.Channel.GetCD_ID(smiles);
        }
        
        public System.Threading.Tasks.Task<int[]> GetCD_IDAsync(string smiles) {
            return base.Channel.GetCD_IDAsync(smiles);
        }
        
        public int[] GetJchemQueryID(string smiles) {
            return base.Channel.GetJchemQueryID(smiles);
        }
        
        public System.Threading.Tasks.Task<int[]> GetJchemQueryIDAsync(string smiles) {
            return base.Channel.GetJchemQueryIDAsync(smiles);
        }
        
        public string GetSmilesFromCASByChemaxon(string cas) {
            return base.Channel.GetSmilesFromCASByChemaxon(cas);
        }
        
        public System.Threading.Tasks.Task<string> GetSmilesFromCASByChemaxonAsync(string cas) {
            return base.Channel.GetSmilesFromCASByChemaxonAsync(cas);
        }
    }
}
